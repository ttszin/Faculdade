# -*- coding: utf-8 -*-
"""Euler_134498.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y68UCEmzOgOkV-rFAd1VWa-FJK0IN9eC

#Nome: Matheus Teixeira de Souza
#Resumo:

**O Método de Euler é utilizado para aproximar soluções de EDOs ao avançar ponto a ponto, somando pequenos incrementos baseados na derivada da função.**

**Entramos com uma equação diferencial e uma condição inicial de y, juntamente com o tamanho dos passos e o intervalo a,b . Após isso, vai iterando cada ponto e encontrando o próximo utilizando a inclinação e o valor de y atual, e com a fórmula de Euler consegue estimar os próximos pontos. **
"""

# Importando a biblioteca numpy para trabalhar com arrays e o math para funções matemáticas
import numpy as np
import math

"""
    Implementa o método de Euler
    Parâmetros:
        a = Início do intervalo
        b = Fim do intervalo
        y0 = Valor inicial de y
        h = Tamanho do passo

    O que é retornado?
    A resolução da EDO de primeira ordem
"""
# Definindo a função f(x, y) que representa a EDO a ser resolvida
def f(x, y):
    return -2*(x**3) + 12*(x**2) - 20*x + 8.5  # Derivada de y em relação a x

# Método de Euler para resolver uma EDO de 1ª ordem
def metodo_de_euler(a, b, y0, h):
    n = int((b - a) / h)  # Número de passos de iteração
    x = np.zeros(n + 1)   # Criando array de zeros para armazenar valores de x
    y = np.zeros(n + 1)   # Criando array de zeros para armazenar valores de y
    x[0], y[0] = a, y0    # Condição inicial

    # Iteração do método de Euler
    for i in range(n):
        y[i+1] = y[i] + h * f(x[i], y[i])  # Fórmula do método de Euler
        x[i+1] = x[i] + h                  # Incremento de x pelo passo h

    return x, y

# Parâmetros fornecidos no exemplo
a = 0       # Define o início do intervalo
b = 4       # Define o fim do intervalo
y0 = 1      # Valor inicial de y
h = 0.5     # Tamanho do passo

# Chamando o método de Euler
x, y = metodo_de_euler(a, b, y0, h)

# Exibindo os resultados
for i in range(len(x)):
    print(f"x[{i}] = {x[i]:.2f}, y[{i}] = {y[i]:.4f}")